{"version":3,"sources":["js/timer.js","index.js"],"names":["CountdownTimer","constructor","targetDate","selector","intID","deltaTime","refs","daysRef","document","querySelector","hoursRef","minsRef","secsRef","start","console","log","setInterval","currentTime","Date","now","days","pad","Math","floor","hours","mins","secs","insertValues","value","String","padStart","textContent","timer"],"mappings":";;;AAAA,MAAMA,EACFC,aAAY,WAAEC,EAAF,SAAcC,IACjBA,KAAAA,SAAWA,EACXD,KAAAA,WAAaA,EACbE,KAAAA,MAAQ,KACRC,KAAAA,UAAY,EACZC,KAAAA,KAAM,CACfC,QAASC,SAASC,cAAc,uBAChCC,SAAUF,SAASC,cAAc,wBACjCE,QAASH,SAASC,cAAc,uBAChCG,QAASJ,SAASC,cAAc,wBAGhCI,QACIC,QAAQC,IAAK,eACRX,KAAAA,MAAQY,YAAY,KACjBC,IAAAA,EAAcC,KAAKC,MAClBd,KAAAA,UAAY,KAAKH,WAAae,EAC7BG,MAAAA,EAAO,KAAKC,IAAIC,KAAKC,MAAM,KAAKlB,UAAa,QAC7CmB,EAAQ,KAAKH,IAAIC,KAAKC,MAAO,KAAKlB,UAAa,MAAyB,OACxEoB,EAAO,KAAKJ,IAAIC,KAAKC,MAAO,KAAKlB,UAAa,KAAoB,MAClEqB,EAAO,KAAKL,IAAIC,KAAKC,MAAO,KAAKlB,UAAa,IAAc,MAC7DsB,KAAAA,aAAaP,EAAMI,EAAOC,EAAMC,IACtC,KAGPL,IAAIO,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAErCH,aAAaP,EAAMI,EAAOC,EAAMC,GACvBpB,KAAAA,KAAKC,QAAQwB,YAAcX,EAC3Bd,KAAAA,KAAKI,SAASqB,YAAcP,EAC5BlB,KAAAA,KAAKK,QAAQoB,YAAcN,EAC3BnB,KAAAA,KAAKM,QAAQmB,YAAcL,GAKxC,MAAMM,EAAQ,IAAIhC,EAAe,CAC/BG,SAAU,WACVD,WAAY,IAAIgB,KAAM,iBAExBc,EAAMnB;;ACzCN,aADA,QAAA,oBACA,QAAA","file":"src.538c0248.js","sourceRoot":"../src","sourcesContent":["class CountdownTimer {\n    constructor({ targetDate, selector }) {\n        this.selector = selector\n        this.targetDate = targetDate\n        this.intID = null\n        this.deltaTime = 0\n        this.refs ={\n    daysRef: document.querySelector('[data-value=\"days\"]'),\n    hoursRef: document.querySelector('[data-value=\"hours\"]'),\n    minsRef: document.querySelector('[data-value=\"mins\"]'),\n    secsRef: document.querySelector('[data-value=\"secs\"]'),\n}\n    }\n    start() {\n        console.log(`timer start`);\n        this.intID = setInterval(() => {\n            let currentTime = Date.now()\n            this.deltaTime = this.targetDate - currentTime\n            const days = this.pad(Math.floor(this.deltaTime / (1000 * 60 * 60 * 24)))\n            const hours = this.pad(Math.floor((this.deltaTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)))\n            const mins = this.pad(Math.floor((this.deltaTime % (1000 * 60 * 60)) / (1000 * 60)))\n            const secs = this.pad(Math.floor((this.deltaTime % (1000 * 60)) / 1000));\n            this.insertValues(days, hours, mins, secs)\n        }, 1000)\n    }\n\n    pad(value) {\n        return String(value).padStart(2, '0')\n    }\n    insertValues(days, hours, mins, secs) {\n        this.refs.daysRef.textContent = days\n        this.refs.hoursRef.textContent = hours\n        this.refs.minsRef.textContent = mins\n        this.refs.secsRef.textContent = secs\n\n    }\n}\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date(`Jan 1, 2022`),\n});\ntimer.start()\n","import './sass/main.scss';\nimport './js/timer.js';"]}